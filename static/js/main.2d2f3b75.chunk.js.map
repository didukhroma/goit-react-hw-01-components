{"version":3,"sources":["components/Profile/Profile.module.css","components/Transactions/transactionHistory.module.scss","components/FriendList/FriendListItem/FriendListItem.module.scss","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.scss","components/Transactions/Transaction/transaction.module.scss","components/Container/Container.module.css","components/Container/Container.jsx","components/Profile/Profile.jsx","components/Statistics/randomColor.js","components/Statistics/StatListItem/StatListItem.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/Transactions/Transaction/Transaction.jsx","components/Transactions/TransactionHistory.jsx","App.jsx","index.js"],"names":["module","exports","Container","children","className","styles","Profile","data","name","tag","location","avatar","stats","followers","views","likes","profile","title","description","wrapper","src","alt","stats__item","label","quantity","randomColor","Math","floor","random","toString","StatListItem","percentage","Li","styled","li","option","Statistics","statistics","stat__list","map","elem","length","id","FriendListItem","friend","isOnline","item","status__active","status","width","defaultProps","FriendList","friends","list","Transaction","type","amount","currency","TransactionHistory","items","transactions","table","table__header","App","profileData","statisticalData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,OAAS,wBAAwB,YAAc,6BAA6B,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,YAAc,6BAA6B,MAAQ,uBAAuB,QAAU,2B,gBCApXD,EAAOC,QAAU,CAAC,aAAe,yCAAyC,MAAQ,kCAAkC,MAAQ,kCAAkC,cAAgB,4C,gBCA9KD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,OAAS,+BAA+B,eAAiB,uCAAuC,OAAS,+BAA+B,KAAO,+B,iBCArMD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,WAAa,iC,gBCA7GD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,MAAQ,0BAA0B,KAAO,2B,gBCAjGD,EAAOC,QAAU,CAAC,KAAO,4B,4RCAzBD,EAAOC,QAAU,CAAC,UAAY,+B,+6FCIfC,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,qBAAKC,UAAYC,IAAOH,UAAxB,SAAqCC,K,gBC+C1BG,EA7CC,SAAC,GAAD,QAAGC,KACfC,EADY,EACZA,KACAC,EAFY,EAEZA,IACAC,EAHY,EAGZA,SACAC,EAJY,EAIZA,OAJY,IAKZC,MAASC,EALG,EAKHA,UAAWC,EALR,EAKQA,MAAOC,EALf,EAKeA,MALf,OAOZ,sBAAKX,UAAWC,IAAOW,QAAvB,UACI,oBAAIZ,UAAWC,IAAOY,MAAtB,qBACA,sBAAKb,UAAWC,IAAOa,YAAvB,UACI,qBAAKd,UAAWC,IAAOc,QAAvB,SACA,qBAAKC,IAAKT,EAAQU,IAAI,gHAAsBjB,UAAWC,IAAOM,WAE1D,mBAAGP,UAAWC,IAAOG,KAArB,SAA4BA,IAChC,mBAAGJ,UAAWC,IAAOI,IAArB,SAA2BA,IAC3B,mBAAGL,UAAWC,IAAOK,SAArB,SAAgCA,OAEpC,qBAAIN,UAAWC,IAAOO,MAAtB,UACI,qBAAIR,UAAWC,IAAOiB,YAAtB,UACI,sBAAMlB,UAAWC,IAAOkB,MAAxB,uBACA,sBAAMnB,UAAWC,IAAOmB,SAAxB,SAAmCX,OAEvC,qBAAKT,UAAWC,IAAOiB,YAAvB,UACI,sBAAMlB,UAAWC,IAAOkB,MAAxB,mBACA,sBAAMnB,UAAWC,IAAOmB,SAAxB,SAAmCV,OAEvC,qBAAKV,UAAWC,IAAOiB,YAAvB,UACI,sBAAMlB,UAAWC,IAAOkB,MAAxB,mBACA,sBAAMnB,UAAWC,IAAOmB,SAAxB,SAAmCT,c,gBC5BpCU,EAJK,WAClB,IAAMA,EAAcC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,IAClE,MAAM,IAAN,OAAWJ,I,QCiCEK,EA7BM,SAAC,GAA+C,IAAD,IAA5CvB,KAAQgB,EAAoC,EAApCA,MAAOQ,EAA6B,EAA7BA,WAAcP,EAAe,EAAfA,SAG3CQ,EAAKC,IAAOC,GAAV,6MAOF,gBAAGC,EAAH,EAAGA,OAAH,4BAA+BA,EAA/B,QACW,kBAAIV,OAGxB,OACG,eAACO,EAAD,CAAIG,OAAQX,EAAZ,UACI,+BAAQD,IACR,iCAAQQ,EAAR,W,gBCGOK,EApBI,SAAC,GAAsB,IAApBnB,EAAmB,EAAnBA,MAAOL,EAAY,EAAZA,MAC3B,OACM,0BAASR,UAAWC,IAAOgC,WAA3B,UACKpB,GAAU,oBAAIb,UAAWC,IAAOY,MAAtB,SAA8BA,IAEzC,oBAAIb,UAAWC,IAAOiC,WAAtB,SAEK1B,EAAM2B,KAAI,SAACC,GAAD,OAAW,cAAC,EAAD,CAA4BjC,KAAMiC,EAAMhB,SAAUZ,EAAM6B,QAArCD,EAAKE,a,wBCRxDC,EAAiB,SAAC,GAA4C,IAAD,IAAzCC,OAAUjC,EAA+B,EAA/BA,OAAQH,EAAuB,EAAvBA,KAAMqC,EAAiB,EAAjBA,SAClD,OACI,qBAAIzC,UAAWC,IAAOyC,KAAtB,UACKD,EACI,sBAAMzC,UAAWC,IAAO0C,iBACzB,sBAAM3C,UAAWC,IAAO2C,SAC5B,qBAAK5C,UAAWC,IAAOM,OAAQS,IAAKT,EAAQU,IAAKb,EAAMyC,MAAM,OAC7D,mBAAG7C,UAAWC,IAAOG,KAArB,SAA4BA,QAapCmC,EAAeO,aAAe,CAC1BN,OAAQ,CACJC,UAAW,IAIJF,Q,gBCXAQ,EAdI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClB,OACI,0BAAShD,UAAWC,IAAO+C,QAA3B,UACI,oBAAIhD,UAAWC,IAAOY,MAAtB,qBACA,oBAAIb,UAAWC,IAAOgD,KAAtB,SACCD,EAAQb,KAAI,SAAAK,GAAM,OAAI,cAAC,EAAD,CAAiCA,OAAQA,GAApBA,EAAOF,a,wBCOhDY,EAfK,SAAC,GAA0C,IAAD,IAAvCR,KAAQS,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,SACzC,OAAQ,+BACI,oBAAIrD,UAAWC,IAAOE,KAAtB,SAA6BgD,IAC7B,oBAAInD,UAAWC,IAAOE,KAAtB,SAA6BiD,IAC7B,oBAAIpD,UAAWC,IAAOE,KAAtB,SAA6BkD,Q,gBCqB9BC,EAxBY,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACzB,OACA,0BAASvD,UAAWC,IAAOuD,aAA3B,UACI,oBAAIxD,UAAWC,IAAOY,MAAtB,0BACA,wBAAOb,UAAWC,IAAOwD,MAAzB,UACI,gCACI,+BACI,oBAAIzD,UAAWC,IAAOyD,cAAtB,kBACA,oBAAI1D,UAAWC,IAAOyD,cAAtB,oBACA,oBAAI1D,UAAWC,IAAOyD,cAAtB,2BAIR,gCACKH,EAAMpB,KAAI,SAAAO,GAAI,OAAI,cAAC,EAAD,CAA2BA,KAAOA,GAAhBA,EAAKJ,gB,QCe3CqB,EAhBH,WACV,OACE,eAAC,EAAD,WAEE,cAAC,EAAD,CAASxD,KAAMyD,IAEf,cAAC,EAAD,CAAY/C,MAAM,eAAeL,MAAOqD,IACxC,cAAC,EAAD,CAAYrD,MAAOqD,IAEnB,cAAC,EAAD,CAAYb,QAASA,IAErB,cAAC,EAAD,CAAoBO,MAAOC,Q,MCvBjCM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2d2f3b75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3VqhG\",\"wrapper\":\"Profile_wrapper__2CoV0\",\"avatar\":\"Profile_avatar__1KAuj\",\"description\":\"Profile_description__1MNnA\",\"name\":\"Profile_name__2ayoh\",\"tag\":\"Profile_tag__2-VxX\",\"location\":\"Profile_location__1-U_o\",\"stats\":\"Profile_stats__3guTw\",\"stats__item\":\"Profile_stats__item__3i10q\",\"label\":\"Profile_label__1pLKu\",\"quatity\":\"Profile_quatity__mX7yC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactions\":\"transactionHistory_transactions__N5hTW\",\"title\":\"transactionHistory_title__3O3e0\",\"table\":\"transactionHistory_table__1PF39\",\"table__header\":\"transactionHistory_table__header__2O0oC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__3Qc3V\",\"status\":\"FriendListItem_status__3nLBE\",\"status__active\":\"FriendListItem_status__active__25DXR\",\"avatar\":\"FriendListItem_avatar__3Qqdg\",\"name\":\"FriendListItem_name__2BkBT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2WrRi\",\"title\":\"Statistics_title__3x3gC\",\"stat__list\":\"Statistics_stat__list__2I8KK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"FriendList_friends__1UCsO\",\"title\":\"FriendList_title__VCu7k\",\"list\":\"FriendList_list__2GW0X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data\":\"transaction_data__7KYC7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2j-vv\"};","import styles from './Container.module.css';\r\nconst Container = ({ children}) => (\r\n    <div className={ styles.Container}>{ children}</div>\r\n)\r\n\r\nexport default Container;","import PropTypes from \"prop-types\";\r\nimport styles from './Profile.module.css';\r\n\r\n\r\nconst Profile = ({ data: {\r\n    name,\r\n    tag,\r\n    location,\r\n    avatar,\r\n    stats: { followers, views, likes },\r\n} }) => (\r\n    <div className={styles.profile}>\r\n        <h2 className={styles.title}>Profile</h2>\r\n        <div className={styles.description}>\r\n            <div className={styles.wrapper}>\r\n            <img src={avatar} alt=\"Аватар пользователя\" className={styles.avatar} />\r\n            </div>\r\n                <p className={styles.name}>{name}</p>\r\n            <p className={styles.tag}>{tag}</p>\r\n            <p className={styles.location}>{location}</p>\r\n        </div>\r\n        <ul className={styles.stats}>\r\n            <li className={styles.stats__item}>\r\n                <span className={styles.label}>Followers</span>\r\n                <span className={styles.quantity}>{followers}</span>\r\n            </li>\r\n            <li  className={styles.stats__item} >\r\n                <span className={styles.label}>Views</span>\r\n                <span className={styles.quantity}>{views}</span>\r\n            </li>\r\n            <li  className={styles.stats__item}>\r\n                <span className={styles.label}>Likes</span>\r\n                <span className={styles.quantity}>{likes}</span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n);\r\nProfile.propTypes = {\r\n    data: PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        tag: PropTypes.string.isRequired,\r\n        location: PropTypes.string,\r\n        avatar: PropTypes.string.isRequired,\r\n        followers: PropTypes.number,\r\n        views: PropTypes.number,\r\n        likes: PropTypes.number,\r\n    })\r\n}\r\n\r\nexport default Profile;\r\n","const randomColor = () => {\r\n  const randomColor = Math.floor(Math.random() * 16777215).toString(16);\r\n  return `#${randomColor}`;\r\n};\r\nexport default randomColor;\r\n","\r\nimport randomColor from '../randomColor';\r\nimport PropTypes from \"prop-types\";\r\nimport styled from 'styled-components'\r\n\r\n   \r\nconst StatListItem = ({ data: { label, percentage }, quantity }) => {   \r\n\r\n\r\n    const Li = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 50px;\r\n  padding-top: 5px;\r\n  border: 1px solid black;\r\n width: ${({ option }) => `calc(100% / ${option})`};\r\n  background-color:${()=>randomColor()} ;\r\n  `;\r\n\r\n return   (\r\n    <Li option={quantity}  >\r\n        <span >{label}</span>\r\n        <span >{percentage}%</span>\r\n    </Li>\r\n)\r\n};\r\nStatListItem.propTypes = {\r\n    data: PropTypes.shape({\r\n        label: PropTypes.string,\r\n        percentage: PropTypes.number,\r\n    }),\r\n    quantity: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default StatListItem;\r\n\r\n//------------------------------JSS\r\n/*\r\nimport { createUseStyles } from 'react-jss';\r\nimport randomColor from '../randomColor';\r\nimport PropTypes from \"prop-types\";\r\n\r\n   const useStyles = createUseStyles({\r\n        item: {\r\n            width: (quantity)=>`calc(100% / ${quantity})`,\r\n            height: 50,\r\n            backgroundColor: () => randomColor(),\r\n        },\r\n        label: {\r\n            padding: [5,0,5,0],\r\n            display: 'block',\r\n            minHeight: 20,\r\n        },\r\n         percentage: {\r\n            display:'block'\r\n        }\r\n \r\n    })\r\n\r\nconst StatListItem = ( { data: { label, percentage },  quantity }) => { \r\n    const classes = useStyles(quantity);\r\n return   (\r\n    <li className={classes.item}>\r\n        <span className={classes.label}>{label}</span>\r\n        <span className={classes.percentage}>{percentage}%</span>\r\n    </li>\r\n)\r\n};\r\nStatListItem.propTypes = {\r\n    data: PropTypes.shape({\r\n        label: PropTypes.string,\r\n        percentage: PropTypes.number,\r\n    }),\r\n    quantity:PropTypes.number.isRequired\r\n}\r\n*/\r\n","import StatListItem from './StatListItem'\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './Statistics.module.css';\r\n\r\n  \r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return  (\r\n        <section className={styles.statistics}>\r\n            {title && (<h2 className={styles.title}>{title}</h2>)}\r\n\r\n            <ul className={styles.stat__list}>\r\n            \r\n                {stats.map((elem) => (<StatListItem key={elem.id} data={elem} quantity={stats.length} />)\r\n                )}\r\n           \r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Statistics;\r\n","\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './FriendListItem.module.scss';\r\n\r\n\r\nconst FriendListItem = ({ friend: { avatar, name, isOnline } }) => {\r\nreturn (\r\n    <li className={styles.item}>\r\n        {isOnline ? \r\n            (<span className={styles.status__active}></span>)\r\n        : ( <span className={styles.status}></span>)}\r\n        <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n        <p className={styles.name}>{name}</p>\r\n    </li>\r\n);\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n    friend: PropTypes.shape({\r\n        avatar: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        isOnline: PropTypes.bool\r\n   }) \r\n}\r\n\r\nFriendListItem.defaultProps = {\r\n    friend: {\r\n        isOnline : false,\r\n    }\r\n}\r\n\r\nexport default FriendListItem;\r\n","import FriendListItem from './FriendListItem';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FriendList.module.scss\"\r\n\r\n\r\n\r\nconst FriendList = ({ friends }) => {\r\n    return (\r\n        <section className={styles.friends}>\r\n            <h2 className={styles.title}>Friends</h2>\r\n            <ul className={styles.list}>\r\n            {friends.map(friend => <FriendListItem key={friend.id } friend={friend}/>) }\r\n            </ul>\r\n        </section>)\r\n} \r\n\r\nFriendList.propTypes = {\r\n   friends: PropTypes.array.isRequired \r\n}\r\n\r\nexport default FriendList;\r\n\r\n\r\n\r\n","import styles from './transaction.module.scss';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Transaction = ({ item: { type, amount, currency } }) => {\r\n    return (<tr>\r\n                <td className={styles.data}>{type}</td>\r\n                <td className={styles.data}>{amount}</td>\r\n                <td className={styles.data}>{currency}</td>\r\n            </tr>)\r\n}\r\n\r\nTransaction.propTypes = {\r\n    item: PropTypes.shape({\r\n        type: PropTypes.string.isRequired,\r\n        amount: PropTypes.string.isRequired,\r\n        currency: PropTypes.string.isRequired,\r\n    })\r\n}\r\nexport default Transaction;","import PropTypes from \"prop-types\";\r\nimport Transaction from './Transaction'\r\nimport styles from './transactionHistory.module.scss'\r\n\r\nconst TransactionHistory = ({items}) => {\r\n    return (\r\n    <section className={styles.transactions}>\r\n        <h2 className={styles.title}>Transactions</h2>\r\n        <table className={styles.table}>\r\n            <thead>\r\n                <tr>\r\n                    <th className={styles.table__header}>Type</th>\r\n                    <th className={styles.table__header}>Amount</th>\r\n                    <th className={styles.table__header}>Currency</th>\r\n                </tr>\r\n             </thead>\r\n\r\n            <tbody>\r\n                {items.map(item => <Transaction key={item.id} item={ item} />)}           \r\n            </tbody>\r\n        </table>\r\n    </section>\r\n);\r\n}\r\nTransactionHistory.propTypes = {\r\n     items: PropTypes.array.isRequired\r\n }\r\n\r\nexport default TransactionHistory;\r\n\r\n","import React from \"react\";\nimport Container from './components/Container';\n//---------------------------------------------------------\nimport Profile from './components/Profile';\nimport profileData from './JSON/user.json';\n//---------------------------------------------------------\nimport Statistics from './components/Statistics'\nimport statisticalData from './JSON/statistical-data.json';\n//---------------------------------------------------------\nimport FriendList from './components/FriendList';\nimport friends from './JSON/friends.json';\n//---------------------------------------------------------\nimport TransactionHistory from './components/Transactions';\nimport transactions from './JSON/transactions.json';\n//---------------------------------------------------------\n\n\nconst App = () =>{\n  return (\n    <Container>\n      {/* CSS MODULE */}\n      <Profile data={profileData} />\n      {/*  CSS MODULE + STYLED COMPONENTS */}\n      <Statistics title=\"Upload stats\" stats={statisticalData} /> \n      <Statistics stats={statisticalData} />\n      {/* SASS MODULE  */}\n      <FriendList friends={friends} />\n      {/* SASS MODULE */}\n      <TransactionHistory items={transactions} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}